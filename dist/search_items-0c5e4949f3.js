searchNodes=[{"doc":"App Entry Main Docs and interface for people using this library should be provided here.","ref":"Remedy.html","title":"Remedy","type":"module"},{"doc":"","ref":"Remedy.Api.Endpoints.html","title":"Remedy.Api.Endpoints","type":"module"},{"doc":"","ref":"Remedy.Api.Endpoints.html#application_information/0","title":"Remedy.Api.Endpoints.application_information/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel/1","title":"Remedy.Api.Endpoints.channel/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_bulk_delete/1","title":"Remedy.Api.Endpoints.channel_bulk_delete/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_call_ring/1","title":"Remedy.Api.Endpoints.channel_call_ring/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_invites/1","title":"Remedy.Api.Endpoints.channel_invites/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_message/2","title":"Remedy.Api.Endpoints.channel_message/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_messages/1","title":"Remedy.Api.Endpoints.channel_messages/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_permission/2","title":"Remedy.Api.Endpoints.channel_permission/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_permissions/1","title":"Remedy.Api.Endpoints.channel_permissions/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_pin/2","title":"Remedy.Api.Endpoints.channel_pin/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_pins/1","title":"Remedy.Api.Endpoints.channel_pins/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_reaction/4","title":"Remedy.Api.Endpoints.channel_reaction/4","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_reaction_me/3","title":"Remedy.Api.Endpoints.channel_reaction_me/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_reactions_delete/2","title":"Remedy.Api.Endpoints.channel_reactions_delete/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_reactions_delete_emoji/3","title":"Remedy.Api.Endpoints.channel_reactions_delete_emoji/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_reactions_get/3","title":"Remedy.Api.Endpoints.channel_reactions_get/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channel_typing/1","title":"Remedy.Api.Endpoints.channel_typing/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#channels/0","title":"Remedy.Api.Endpoints.channels/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#global_application_command/2","title":"Remedy.Api.Endpoints.global_application_command/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#global_application_commands/1","title":"Remedy.Api.Endpoints.global_application_commands/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#group_recipient/2","title":"Remedy.Api.Endpoints.group_recipient/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild/1","title":"Remedy.Api.Endpoints.guild/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_application_command/3","title":"Remedy.Api.Endpoints.guild_application_command/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_application_commands/2","title":"Remedy.Api.Endpoints.guild_application_commands/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_audit_logs/1","title":"Remedy.Api.Endpoints.guild_audit_logs/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_ban/2","title":"Remedy.Api.Endpoints.guild_ban/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_bans/1","title":"Remedy.Api.Endpoints.guild_bans/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_channels/1","title":"Remedy.Api.Endpoints.guild_channels/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_embed/1","title":"Remedy.Api.Endpoints.guild_embed/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_emoji/2","title":"Remedy.Api.Endpoints.guild_emoji/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_emojis/1","title":"Remedy.Api.Endpoints.guild_emojis/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_integration/2","title":"Remedy.Api.Endpoints.guild_integration/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_integration_sync/2","title":"Remedy.Api.Endpoints.guild_integration_sync/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_integrations/1","title":"Remedy.Api.Endpoints.guild_integrations/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_invites/1","title":"Remedy.Api.Endpoints.guild_invites/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_me_nick/1","title":"Remedy.Api.Endpoints.guild_me_nick/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_member/2","title":"Remedy.Api.Endpoints.guild_member/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_member_role/3","title":"Remedy.Api.Endpoints.guild_member_role/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_members/1","title":"Remedy.Api.Endpoints.guild_members/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_prune/1","title":"Remedy.Api.Endpoints.guild_prune/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_role/2","title":"Remedy.Api.Endpoints.guild_role/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_roles/1","title":"Remedy.Api.Endpoints.guild_roles/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guild_voice_regions/1","title":"Remedy.Api.Endpoints.guild_voice_regions/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#guilds/0","title":"Remedy.Api.Endpoints.guilds/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#interaction_callback/2","title":"Remedy.Api.Endpoints.interaction_callback/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#interaction_followup_message/3","title":"Remedy.Api.Endpoints.interaction_followup_message/3","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#invite/1","title":"Remedy.Api.Endpoints.invite/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#me/0","title":"Remedy.Api.Endpoints.me/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#me_channels/0","title":"Remedy.Api.Endpoints.me_channels/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#me_connections/0","title":"Remedy.Api.Endpoints.me_connections/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#me_guild/1","title":"Remedy.Api.Endpoints.me_guild/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#me_guilds/0","title":"Remedy.Api.Endpoints.me_guilds/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#regions/0","title":"Remedy.Api.Endpoints.regions/0","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#user/1","title":"Remedy.Api.Endpoints.user/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhook/1","title":"Remedy.Api.Endpoints.webhook/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhook_git/2","title":"Remedy.Api.Endpoints.webhook_git/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhook_slack/2","title":"Remedy.Api.Endpoints.webhook_slack/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhook_token/2","title":"Remedy.Api.Endpoints.webhook_token/2","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhooks_channel/1","title":"Remedy.Api.Endpoints.webhooks_channel/1","type":"function"},{"doc":"","ref":"Remedy.Api.Endpoints.html#webhooks_guild/1","title":"Remedy.Api.Endpoints.webhooks_guild/1","type":"function"},{"doc":"Ratelimit implimentation specific to Discord's API. Only to be used when starting in a rest-only manner.","ref":"Remedy.Api.Ratelimiter.html","title":"Remedy.Api.Ratelimiter","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Remedy.Api.Ratelimiter.html#child_spec/1","title":"Remedy.Api.Ratelimiter.child_spec/1","type":"function"},{"doc":"Empties all buckets, voiding any saved ratelimit values.","ref":"Remedy.Api.Ratelimiter.html#empty_buckets/0","title":"Remedy.Api.Ratelimiter.empty_buckets/0","type":"function"},{"doc":"Retrieves a proper ratelimit endpoint from a given route and url.","ref":"Remedy.Api.Ratelimiter.html#get_endpoint/2","title":"Remedy.Api.Ratelimiter.get_endpoint/2","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"Remedy.Api.Ratelimiter.html#init/1","title":"Remedy.Api.Ratelimiter.init/1","type":"function"},{"doc":"Starts the ratelimiter.","ref":"Remedy.Api.Ratelimiter.html#start_link/1","title":"Remedy.Api.Ratelimiter.start_link/1","type":"function"},{"doc":"Return values of start functions.","ref":"Remedy.Api.Ratelimiter.html#t:on_start/0","title":"Remedy.Api.Ratelimiter.on_start/0","type":"type"},{"doc":"Simple cache that stores information for the current user.","ref":"Remedy.Bot.html","title":"Remedy.Bot","type":"module"},{"doc":"","ref":"Remedy.Bot.html#delete/0","title":"Remedy.Bot.delete/0","type":"function"},{"doc":"","ref":"Remedy.Bot.html#get/0","title":"Remedy.Bot.get/0","type":"function"},{"doc":"","ref":"Remedy.Bot.html#put/1","title":"Remedy.Bot.put/1","type":"function"},{"doc":"","ref":"Remedy.Bot.html#start_link/1","title":"Remedy.Bot.start_link/1","type":"function"},{"doc":"","ref":"Remedy.Bot.html#update/1","title":"Remedy.Bot.update/1","type":"function"},{"doc":"Discord CDN interface. Storing images and other assets can be painful, use this module to retreive assets from the discord cdn rather than storing them. Each function takes the required parameters to directly access a resource. Format All images are returned as either a .png or a .gif if the asset is animated. This is done automatically. Size Images can be requested of a size in [16, 32, 64, 128, 256, 512, 1024, 2048, 4096] . This is given as an optional final argument to any of the functions in this module. Arguments given will be rounded to the next largest, or the largest size if you try to go over.","ref":"Remedy.CDN.html","title":"Remedy.CDN","type":"module"},{"doc":"","ref":"Remedy.CDN.html#achievement_icon/4","title":"Remedy.CDN.achievement_icon/4","type":"function"},{"doc":"","ref":"Remedy.CDN.html#application_asset/3","title":"Remedy.CDN.application_asset/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#application_icon/3","title":"Remedy.CDN.application_icon/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#appplication_cover/3","title":"Remedy.CDN.appplication_cover/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#custom_emoji/2","title":"Remedy.CDN.custom_emoji/2","type":"function"},{"doc":"","ref":"Remedy.CDN.html#default_user_avatar/2","title":"Remedy.CDN.default_user_avatar/2","type":"function"},{"doc":"","ref":"Remedy.CDN.html#guild_banner/3","title":"Remedy.CDN.guild_banner/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#guild_discovery_splash/3","title":"Remedy.CDN.guild_discovery_splash/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#guild_icon/3","title":"Remedy.CDN.guild_icon/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#guild_splash/3","title":"Remedy.CDN.guild_splash/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#sticker_pack_banner/2","title":"Remedy.CDN.sticker_pack_banner/2","type":"function"},{"doc":"","ref":"Remedy.CDN.html#user_avatar/3","title":"Remedy.CDN.user_avatar/3","type":"function"},{"doc":"","ref":"Remedy.CDN.html#user_banner/3","title":"Remedy.CDN.user_banner/3","type":"function"},{"doc":"Functions for interracting with the cache.","ref":"Remedy.Cache.html","title":"Remedy.Cache","type":"module"},{"doc":"Consumer process for gateway event handling. Consuming Gateway Events To handle events, Remedy uses a GenStage implementation. Remedy defines the producer and producer_consumer in the GenStage design. To consume the events you must create at least one consumer process. It is generally recommended that you spawn a consumer per core. To find this number you can use System.schedulers_online/0 . Remedy uses a ConsumerSupervisor to dispatch events, meaning your handlers will each be ran in their own seperate task. Example An example consumer can be found here .","ref":"Remedy.Consumer.html","title":"Remedy.Consumer","type":"behaviour"},{"doc":"","ref":"Remedy.Consumer.html#c:handle_event/1","title":"Remedy.Consumer.handle_event/1","type":"callback"},{"doc":"","ref":"Remedy.Consumer.html#start_link/2","title":"Remedy.Consumer.start_link/2","type":"function"},{"doc":"","ref":"Remedy.Consumer.html#t:channel_create/0","title":"Remedy.Consumer.channel_create/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:channel_delete/0","title":"Remedy.Consumer.channel_delete/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:channel_pins_ack/0","title":"Remedy.Consumer.channel_pins_ack/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:channel_pins_update/0","title":"Remedy.Consumer.channel_pins_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:channel_update/0","title":"Remedy.Consumer.channel_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:event/0","title":"Remedy.Consumer.event/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_available/0","title":"Remedy.Consumer.guild_available/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_ban_add/0","title":"Remedy.Consumer.guild_ban_add/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_ban_remove/0","title":"Remedy.Consumer.guild_ban_remove/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_create/0","title":"Remedy.Consumer.guild_create/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_delete/0","title":"Remedy.Consumer.guild_delete/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_emojis_update/0","title":"Remedy.Consumer.guild_emojis_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_integrations_update/0","title":"Remedy.Consumer.guild_integrations_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_member_add/0","title":"Remedy.Consumer.guild_member_add/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_member_remove/0","title":"Remedy.Consumer.guild_member_remove/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_member_update/0","title":"Remedy.Consumer.guild_member_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_members_chunk/0","title":"Remedy.Consumer.guild_members_chunk/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_role_create/0","title":"Remedy.Consumer.guild_role_create/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_role_delete/0","title":"Remedy.Consumer.guild_role_delete/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_role_update/0","title":"Remedy.Consumer.guild_role_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_unavailable/0","title":"Remedy.Consumer.guild_unavailable/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:guild_update/0","title":"Remedy.Consumer.guild_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_ack/0","title":"Remedy.Consumer.message_ack/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_create/0","title":"Remedy.Consumer.message_create/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_delete/0","title":"Remedy.Consumer.message_delete/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_delete_bulk/0","title":"Remedy.Consumer.message_delete_bulk/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_reaction_add/0","title":"Remedy.Consumer.message_reaction_add/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_reaction_remove/0","title":"Remedy.Consumer.message_reaction_remove/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_reaction_remove_all/0","title":"Remedy.Consumer.message_reaction_remove_all/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_reaction_remove_emoji/0","title":"Remedy.Consumer.message_reaction_remove_emoji/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:message_update/0","title":"Remedy.Consumer.message_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:presence_update/0","title":"Remedy.Consumer.presence_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:ready/0","title":"Remedy.Consumer.ready/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:resumed/0","title":"Remedy.Consumer.resumed/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:typing_start/0","title":"Remedy.Consumer.typing_start/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:user_settings_update/0","title":"Remedy.Consumer.user_settings_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:user_update/0","title":"Remedy.Consumer.user_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:voice_ready/0","title":"Remedy.Consumer.voice_ready/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:voice_server_update/0","title":"Remedy.Consumer.voice_server_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:voice_speaking_update/0","title":"Remedy.Consumer.voice_speaking_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:voice_state_update/0","title":"Remedy.Consumer.voice_state_update/0","type":"type"},{"doc":"","ref":"Remedy.Consumer.html#t:webhooks_update/0","title":"Remedy.Consumer.webhooks_update/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Dispatch.ChannelCreate.html","title":"Remedy.Gateway.Dispatch.ChannelCreate","type":"module"},{"doc":"","ref":"Remedy.Gateway.Dispatch.ChannelCreate.html#handle/2","title":"Remedy.Gateway.Dispatch.ChannelCreate.handle/2","type":"function"},{"doc":"","ref":"Remedy.Gateway.Events.Reconnect.html","title":"Remedy.Gateway.Events.Reconnect","type":"module"},{"doc":"","ref":"Remedy.Gateway.Events.Reconnect.html#handle/2","title":"Remedy.Gateway.Events.Reconnect.handle/2","type":"function"},{"doc":"Payload represents the data packet set to discord through the API. All processing of the payload should be done within this context as it will be cleared upon returning to the session process. These functions exist to attempt friendly discourse with the ill mannered Discord gateway. Documentation is included for completeness but using them is at your peril! Fields op: Opcode. d: Data. s: Sequence. t: Event Name. Sending send/2 Any event that will be delivered to discord must contain a send/2 function. It is given the socket and a keyword list of options, and returns just the payload data. This will be dispatched upon receiving an event of the module name converted to discord case. For example: if the session receives a message of :HEARTBEAT . The socket will immediately be passed to Payload.Heartbeat.send/2 . Therefore the %Websocket{} struct must contain all of the required information to return the heartbeat. Once the payload has been sent, the payload field will be cleared. The only requirement of payload/2 is that it returns the payload data. the other fields will automatically be calculated. The HeartbeatAck module simply returns the Receiving intake/2 Some payloads coming from discord should be immediately decoded and their information added to the socket. For each of these data types an intake/2 function should be included Mappings to use these functions are provided from within the Remedy.Gateway module. Dispatching Events that are dispatched to our consumer will generally require more expenisve processing, such as caching etc. This Modules that use Payload will have their data packed and passed to this function through the send callback. The callback described above is only required to return the raw data. It is further","ref":"Remedy.Gateway.Payload.html","title":"Remedy.Gateway.Payload","type":"behaviour"},{"doc":"Digest the data frame from Discord and loads the data into the socket. For example: The :heartbeat_ack flag on the websocket needs to be set to true once the :HEARTBEAT_ACK event is received from discord. In short. Do what you need to do with the payload. because its going away","ref":"Remedy.Gateway.Payload.html#c:digest/2","title":"Remedy.Gateway.Payload.digest/2","type":"callback"},{"doc":"Digest the data frame into the socket. Delegates the digestion to the appropriate module. It is that modules responsibility to implement the digest/2 callback and return the %Websocket{}","ref":"Remedy.Gateway.Payload.html#digest/3","title":"Remedy.Gateway.Payload.digest/3","type":"function"},{"doc":"Describes how to take the current socket state and construct the payload data for this modules event type. For example: Heartbeat.send/2 will take the socket, and a keyword list of options, and construct the payload data for the event of type :HEARTBEAT . It is the responsibility of the developer to ensure that all events required to be sent implement this function. If the behaviour is not described. Passing this function will just pass the socket back to session to continue doing what it do.","ref":"Remedy.Gateway.Payload.html#c:payload/2","title":"Remedy.Gateway.Payload.payload/2","type":"callback"},{"doc":"Sends a command based on the current websocket state. Using this will invoke the appropriate modules","ref":"Remedy.Gateway.Payload.html#send/3","title":"Remedy.Gateway.Payload.send/3","type":"function"},{"doc":"","ref":"Remedy.Gateway.Payload.html#t:opts/0","title":"Remedy.Gateway.Payload.opts/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Payload.html#t:payload/0","title":"Remedy.Gateway.Payload.payload/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Payload.html#t:socket/0","title":"Remedy.Gateway.Payload.socket/0","type":"type"},{"doc":"Contains all the information required to maintain the gateway websocket connection to Discord.","ref":"Remedy.Gateway.Websocket.html","title":"Remedy.Gateway.Websocket","type":"module"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#changeset/1","title":"Remedy.Gateway.Websocket.changeset/1","type":"function"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#changeset/2","title":"Remedy.Gateway.Websocket.changeset/2","type":"function"},{"doc":"Gets the latency of the shard connection from a Remedy.Struct.Websocket.t() struct. Returns the latency in milliseconds as an integer, returning nil if unknown.","ref":"Remedy.Gateway.Websocket.html#get_shard_latency/1","title":"Remedy.Gateway.Websocket.get_shard_latency/1","type":"function"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#new/1","title":"Remedy.Gateway.Websocket.new/1","type":"function"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:gateway/0","title":"Remedy.Gateway.Websocket.gateway/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:gun_conn/0","title":"Remedy.Gateway.Websocket.gun_conn/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:gun_data_stream/0","title":"Remedy.Gateway.Websocket.gun_data_stream/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:gun_worker/0","title":"Remedy.Gateway.Websocket.gun_worker/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:heartbeat_ack/0","title":"Remedy.Gateway.Websocket.heartbeat_ack/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:heartbeat_interval/0","title":"Remedy.Gateway.Websocket.heartbeat_interval/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:heartbeat_timer/0","title":"Remedy.Gateway.Websocket.heartbeat_timer/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:last_heartbeat_ack/0","title":"Remedy.Gateway.Websocket.last_heartbeat_ack/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:last_heartbeat_send/0","title":"Remedy.Gateway.Websocket.last_heartbeat_send/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:payload_data/0","title":"Remedy.Gateway.Websocket.payload_data/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:payload_dispatch_event/0","title":"Remedy.Gateway.Websocket.payload_dispatch_event/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:payload_op_code/0","title":"Remedy.Gateway.Websocket.payload_op_code/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:payload_op_event/0","title":"Remedy.Gateway.Websocket.payload_op_event/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:payload_sequence/0","title":"Remedy.Gateway.Websocket.payload_sequence/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:session_id/0","title":"Remedy.Gateway.Websocket.session_id/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:shard/0","title":"Remedy.Gateway.Websocket.shard/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:shard_pid/0","title":"Remedy.Gateway.Websocket.shard_pid/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:t/0","title":"Remedy.Gateway.Websocket.t/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:token/0","title":"Remedy.Gateway.Websocket.token/0","type":"type"},{"doc":"","ref":"Remedy.Gateway.Websocket.html#t:zlib_context/0","title":"Remedy.Gateway.Websocket.zlib_context/0","type":"type"},{"doc":"Gateway Air Traffic Control","ref":"Remedy.GatewayATC.html","title":"Remedy.GatewayATC","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Remedy.GatewayATC.html#child_spec/1","title":"Remedy.GatewayATC.child_spec/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"Remedy.GatewayATC.html#init/1","title":"Remedy.GatewayATC.init/1","type":"function"},{"doc":"","ref":"Remedy.GatewayATC.html#request_connect/1","title":"Remedy.GatewayATC.request_connect/1","type":"function"},{"doc":"","ref":"Remedy.GatewayATC.html#start_link/1","title":"Remedy.GatewayATC.start_link/1","type":"function"},{"doc":"Helpers for Gun so that I can lose the erlang syntax. Everything takes a %Websocket{} and returns a %Websocket{} .","ref":"Remedy.Gun.html","title":"Remedy.Gun","type":"module"},{"doc":"","ref":"Remedy.Gun.html#close/1","title":"Remedy.Gun.close/1","type":"function"},{"doc":"Combines :gun.open and :gun.await_up . Because we use them both together anytime we use them anyway.","ref":"Remedy.Gun.html#open_await/1","title":"Remedy.Gun.open_await/1","type":"function"},{"doc":"Send the payload.","ref":"Remedy.Gun.html#send/2","title":"Remedy.Gun.send/2","type":"function"},{"doc":"","ref":"Remedy.Gun.html#unpack_frame/2","title":"Remedy.Gun.unpack_frame/2","type":"function"},{"doc":"Same as above. Upgrades the conn to websocket and holds the process until its good to go.","ref":"Remedy.Gun.html#upgrade_ws_await/1","title":"Remedy.Gun.upgrade_ws_await/1","type":"function"},{"doc":"","ref":"Remedy.Gun.html#zlib_init/1","title":"Remedy.Gun.zlib_init/1","type":"function"},{"doc":"","ref":"Remedy.ModelHelpers.html","title":"Remedy.ModelHelpers","type":"module"},{"doc":"Functions that work on permissions. Some functions return a list of permissions. You can use enumerable functions to work with permissions: alias Remedy.Cache.GuildCache alias Remedy.Struct.Guild.Member guild = GuildCache.get!(279093381723062272) member = Map.get(guild.members, 177888205536886784) member_perms = Member.guild_permissions(member, guild) if :administrator in member_perms do IO.puts(&quot;This user has the administrator permission.&quot;) end","ref":"Remedy.Permission.html","title":"Remedy.Permission","type":"module"},{"doc":"Returns a list of all permissions.","ref":"Remedy.Permission.html#all/0","title":"Remedy.Permission.all/0","type":"function"},{"doc":"Converts the given bit to a permission. This function returns :error if bit does not map to a permission. Examples iex&gt; Remedy.Permission.from_bit(0x04000000) {:ok, :change_nickname} iex&gt; Remedy.Permission.from_bit(0) :error","ref":"Remedy.Permission.html#from_bit/1","title":"Remedy.Permission.from_bit/1","type":"function"},{"doc":"Same as from_bit/1 , but raises ArgumentError in case of failure. Examples iex&gt; Remedy.Permission.from_bit!(0x04000000) :change_nickname iex&gt; Remedy.Permission.from_bit!(0) ** (ArgumentError) expected a valid bit, got: `0`","ref":"Remedy.Permission.html#from_bit!/1","title":"Remedy.Permission.from_bit!/1","type":"function"},{"doc":"Converts the given bitset to a list of permissions. If invalid bits are given they will be omitted from the results. Examples iex&gt; Remedy.Permission.from_bitset(0x08000002) [:manage_nicknames, :kick_members] iex&gt; Remedy.Permission.from_bitset(0x4000000000000) []","ref":"Remedy.Permission.html#from_bitset/1","title":"Remedy.Permission.from_bitset/1","type":"function"},{"doc":"Returns true if term is a permission; otherwise returns false . Examples iex&gt; Remedy.Permission.is_permission(:administrator) true iex&gt; Remedy.Permission.is_permission(:not_a_permission) false","ref":"Remedy.Permission.html#is_permission/1","title":"Remedy.Permission.is_permission/1","type":"macro"},{"doc":"Converts the given permission to a bit. Examples iex&gt; Remedy.Permission.to_bit(:administrator) 8","ref":"Remedy.Permission.html#to_bit/1","title":"Remedy.Permission.to_bit/1","type":"function"},{"doc":"Converts the given enumerable of permissions to a bitset. Examples iex&gt; Remedy.Permission.to_bitset([:administrator, :create_instant_invite]) 9","ref":"Remedy.Permission.html#to_bitset/1","title":"Remedy.Permission.to_bitset/1","type":"function"},{"doc":"Represents a single permission as a bitvalue.","ref":"Remedy.Permission.html#t:bit/0","title":"Remedy.Permission.bit/0","type":"type"},{"doc":"Represents a set of permissions as a bitvalue.","ref":"Remedy.Permission.html#t:bitset/0","title":"Remedy.Permission.bitset/0","type":"type"},{"doc":"","ref":"Remedy.Permission.html#t:general_permission/0","title":"Remedy.Permission.general_permission/0","type":"type"},{"doc":"","ref":"Remedy.Permission.html#t:t/0","title":"Remedy.Permission.t/0","type":"type"},{"doc":"","ref":"Remedy.Permission.html#t:text_permission/0","title":"Remedy.Permission.text_permission/0","type":"type"},{"doc":"","ref":"Remedy.Permission.html#t:voice_permission/0","title":"Remedy.Permission.voice_permission/0","type":"type"},{"doc":"This is the center point between Commands, Interactions and Components. Should probably be the center point of any command framework","ref":"Remedy.Schema.InteractionData.html","title":"Remedy.Schema.InteractionData","type":"module"},{"doc":"","ref":"Remedy.Schema.InteractionData.html#changeset/1","title":"Remedy.Schema.InteractionData.changeset/1","type":"function"},{"doc":"","ref":"Remedy.Schema.InteractionData.html#changeset/2","title":"Remedy.Schema.InteractionData.changeset/2","type":"function"},{"doc":"","ref":"Remedy.Schema.InteractionData.html#new/1","title":"Remedy.Schema.InteractionData.new/1","type":"function"},{"doc":"","ref":"Remedy.Shard.EventDispatch.html","title":"Remedy.Shard.EventDispatch","type":"module"},{"doc":"","ref":"Remedy.Shard.EventDispatch.html#handle/1","title":"Remedy.Shard.EventDispatch.handle/1","type":"function"},{"doc":"","ref":"Remedy.Shard.EventDispatch.html#handle_event/3","title":"Remedy.Shard.EventDispatch.handle_event/3","type":"function"},{"doc":"Sent when a user is unbanned from a guild","ref":"Remedy.Struct.Event.GuildBanRemove.html","title":"Remedy.Struct.Event.GuildBanRemove","type":"module"},{"doc":"ID of the guild","ref":"Remedy.Struct.Event.GuildBanRemove.html#t:guild_id/0","title":"Remedy.Struct.Event.GuildBanRemove.guild_id/0","type":"type"},{"doc":"Event sent when a user is unbanned from a guild","ref":"Remedy.Struct.Event.GuildBanRemove.html#t:t/0","title":"Remedy.Struct.Event.GuildBanRemove.t/0","type":"type"},{"doc":"Unbanned user","ref":"Remedy.Struct.Event.GuildBanRemove.html#t:user/0","title":"Remedy.Struct.Event.GuildBanRemove.user/0","type":"type"},{"doc":"Sent when a guild integration is updated","ref":"Remedy.Struct.Event.GuildIntegrationsUpdate.html","title":"Remedy.Struct.Event.GuildIntegrationsUpdate","type":"module"},{"doc":"ID of the guild whose integrations were updated","ref":"Remedy.Struct.Event.GuildIntegrationsUpdate.html#t:guild_id/0","title":"Remedy.Struct.Event.GuildIntegrationsUpdate.guild_id/0","type":"type"},{"doc":"Event sent when a guild integration is updated","ref":"Remedy.Struct.Event.GuildIntegrationsUpdate.html#t:t/0","title":"Remedy.Struct.Event.GuildIntegrationsUpdate.t/0","type":"type"},{"doc":"Struct representing an Invite Create event","ref":"Remedy.Struct.Event.InviteCreate.html","title":"Remedy.Struct.Event.InviteCreate","type":"module"},{"doc":"Channel id of the channel this invite is for.","ref":"Remedy.Struct.Event.InviteCreate.html#t:channel_id/0","title":"Remedy.Struct.Event.InviteCreate.channel_id/0","type":"type"},{"doc":"The unique invite code.","ref":"Remedy.Struct.Event.InviteCreate.html#t:code/0","title":"Remedy.Struct.Event.InviteCreate.code/0","type":"type"},{"doc":"The time at which the invite was created.","ref":"Remedy.Struct.Event.InviteCreate.html#t:created_at/0","title":"Remedy.Struct.Event.InviteCreate.created_at/0","type":"type"},{"doc":"Guild id of the guild this invite is for.","ref":"Remedy.Struct.Event.InviteCreate.html#t:guild_id/0","title":"Remedy.Struct.Event.InviteCreate.guild_id/0","type":"type"},{"doc":"The user that created the invite.","ref":"Remedy.Struct.Event.InviteCreate.html#t:inviter/0","title":"Remedy.Struct.Event.InviteCreate.inviter/0","type":"type"},{"doc":"Duration (in seconds) after which the invite expires.","ref":"Remedy.Struct.Event.InviteCreate.html#t:max_age/0","title":"Remedy.Struct.Event.InviteCreate.max_age/0","type":"type"},{"doc":"Max number of times this invite can be used.","ref":"Remedy.Struct.Event.InviteCreate.html#t:max_uses/0","title":"Remedy.Struct.Event.InviteCreate.max_uses/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.InviteCreate.html#t:t/0","title":"Remedy.Struct.Event.InviteCreate.t/0","type":"type"},{"doc":"Partially populated user struct of the target user for this invite.","ref":"Remedy.Struct.Event.InviteCreate.html#t:target_user/0","title":"Remedy.Struct.Event.InviteCreate.target_user/0","type":"type"},{"doc":"The type of user target for this invite.","ref":"Remedy.Struct.Event.InviteCreate.html#t:target_user_type/0","title":"Remedy.Struct.Event.InviteCreate.target_user_type/0","type":"type"},{"doc":"Whether this invite only grants temporary membership.","ref":"Remedy.Struct.Event.InviteCreate.html#t:temporary/0","title":"Remedy.Struct.Event.InviteCreate.temporary/0","type":"type"},{"doc":"Number of times this invite has been used.","ref":"Remedy.Struct.Event.InviteCreate.html#t:uses/0","title":"Remedy.Struct.Event.InviteCreate.uses/0","type":"type"},{"doc":"Struct representing an Invite Delete event","ref":"Remedy.Struct.Event.InviteDelete.html","title":"Remedy.Struct.Event.InviteDelete","type":"module"},{"doc":"Channel id of the channel this invite is for.","ref":"Remedy.Struct.Event.InviteDelete.html#t:channel_id/0","title":"Remedy.Struct.Event.InviteDelete.channel_id/0","type":"type"},{"doc":"The unique invite code.","ref":"Remedy.Struct.Event.InviteDelete.html#t:code/0","title":"Remedy.Struct.Event.InviteDelete.code/0","type":"type"},{"doc":"Guild id of the guild this invite is for.","ref":"Remedy.Struct.Event.InviteDelete.html#t:guild_id/0","title":"Remedy.Struct.Event.InviteDelete.guild_id/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.InviteDelete.html#t:t/0","title":"Remedy.Struct.Event.InviteDelete.t/0","type":"type"},{"doc":"Struct representing a Message Delete event","ref":"Remedy.Struct.Event.MessageDelete.html","title":"Remedy.Struct.Event.MessageDelete","type":"module"},{"doc":"Channel id of the deleted message","ref":"Remedy.Struct.Event.MessageDelete.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageDelete.channel_id/0","type":"type"},{"doc":"Guild id of the deleted message nil if a non-guild message was deleted.","ref":"Remedy.Struct.Event.MessageDelete.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageDelete.guild_id/0","type":"type"},{"doc":"Id of the deleted message","ref":"Remedy.Struct.Event.MessageDelete.html#t:id/0","title":"Remedy.Struct.Event.MessageDelete.id/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.MessageDelete.html#t:t/0","title":"Remedy.Struct.Event.MessageDelete.t/0","type":"type"},{"doc":"Struct representing a Message Delete Bulk event","ref":"Remedy.Struct.Event.MessageDeleteBulk.html","title":"Remedy.Struct.Event.MessageDeleteBulk","type":"module"},{"doc":"Channel id of the deleted message","ref":"Remedy.Struct.Event.MessageDeleteBulk.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageDeleteBulk.channel_id/0","type":"type"},{"doc":"Guild id of the deleted message nil if a non-guild message was deleted.","ref":"Remedy.Struct.Event.MessageDeleteBulk.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageDeleteBulk.guild_id/0","type":"type"},{"doc":"Ids of the deleted messages","ref":"Remedy.Struct.Event.MessageDeleteBulk.html#t:ids/0","title":"Remedy.Struct.Event.MessageDeleteBulk.ids/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.MessageDeleteBulk.html#t:t/0","title":"Remedy.Struct.Event.MessageDeleteBulk.t/0","type":"type"},{"doc":"Sent when a user adds a reaction to a message","ref":"Remedy.Struct.Event.MessageReactionAdd.html","title":"Remedy.Struct.Event.MessageReactionAdd","type":"module"},{"doc":"Channel in which the reaction was added","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageReactionAdd.channel_id/0","type":"type"},{"doc":"The (partial) emoji used to react","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:emoji/0","title":"Remedy.Struct.Event.MessageReactionAdd.emoji/0","type":"type"},{"doc":"Guild ID in which the reaction was added, if applicable","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageReactionAdd.guild_id/0","type":"type"},{"doc":"The member who reacted, if this happened on a guild","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:member/0","title":"Remedy.Struct.Event.MessageReactionAdd.member/0","type":"type"},{"doc":"Message to which the reaction was added","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:message_id/0","title":"Remedy.Struct.Event.MessageReactionAdd.message_id/0","type":"type"},{"doc":"Event sent when a user adds a reaction to a message","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:t/0","title":"Remedy.Struct.Event.MessageReactionAdd.t/0","type":"type"},{"doc":"ID of the user who added the reaction","ref":"Remedy.Struct.Event.MessageReactionAdd.html#t:user_id/0","title":"Remedy.Struct.Event.MessageReactionAdd.user_id/0","type":"type"},{"doc":"Sent when a user removes a reaction from a message","ref":"Remedy.Struct.Event.MessageReactionRemove.html","title":"Remedy.Struct.Event.MessageReactionRemove","type":"module"},{"doc":"ID of the channel in which the reaction was created","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageReactionRemove.channel_id/0","type":"type"},{"doc":"Partial emoji object that was removed","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:emoji/0","title":"Remedy.Struct.Event.MessageReactionRemove.emoji/0","type":"type"},{"doc":"ID of the guild on which the message lives, if applicable","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageReactionRemove.guild_id/0","type":"type"},{"doc":"ID of the message to which the reaction was attached","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:message_id/0","title":"Remedy.Struct.Event.MessageReactionRemove.message_id/0","type":"type"},{"doc":"Event sent when a user removes a reaction from a message","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:t/0","title":"Remedy.Struct.Event.MessageReactionRemove.t/0","type":"type"},{"doc":"Author of the reaction","ref":"Remedy.Struct.Event.MessageReactionRemove.html#t:user_id/0","title":"Remedy.Struct.Event.MessageReactionRemove.user_id/0","type":"type"},{"doc":"Sent when a user explicitly removes all reactions from a message","ref":"Remedy.Struct.Event.MessageReactionRemoveAll.html","title":"Remedy.Struct.Event.MessageReactionRemoveAll","type":"module"},{"doc":"ID of the channel in which the message resides.","ref":"Remedy.Struct.Event.MessageReactionRemoveAll.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveAll.channel_id/0","type":"type"},{"doc":"ID of the guild for the message, if applicable.","ref":"Remedy.Struct.Event.MessageReactionRemoveAll.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveAll.guild_id/0","type":"type"},{"doc":"ID of the message from which all reactions were removed.","ref":"Remedy.Struct.Event.MessageReactionRemoveAll.html#t:message_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveAll.message_id/0","type":"type"},{"doc":"Event sent when a user explicitly removes all reactions from a message","ref":"Remedy.Struct.Event.MessageReactionRemoveAll.html#t:t/0","title":"Remedy.Struct.Event.MessageReactionRemoveAll.t/0","type":"type"},{"doc":"Sent when a bot removes all instances of a given emoji from the reactions of a message","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji","type":"module"},{"doc":"Channel in which the message resides.","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html#t:channel_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji.channel_id/0","type":"type"},{"doc":"The (partial) emoji that was removed.","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html#t:emoji/0","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji.emoji/0","type":"type"},{"doc":"Guild on which the message resides, if applicable.","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html#t:guild_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji.guild_id/0","type":"type"},{"doc":"Message from which the emoji was removed.","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html#t:message_id/0","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji.message_id/0","type":"type"},{"doc":"Event sent when a bot removes all instances of a given emoji from the reactions of a message","ref":"Remedy.Struct.Event.MessageReactionRemoveEmoji.html#t:t/0","title":"Remedy.Struct.Event.MessageReactionRemoveEmoji.t/0","type":"type"},{"doc":"Sent on READY","ref":"Remedy.Struct.Event.PartialApplication.html","title":"Remedy.Struct.Event.PartialApplication","type":"module"},{"doc":"Public flags of the application. See https://discord.com/developers/docs/resources/application#application-object-application-flags","ref":"Remedy.Struct.Event.PartialApplication.html#t:flags/0","title":"Remedy.Struct.Event.PartialApplication.flags/0","type":"type"},{"doc":"ID of the application","ref":"Remedy.Struct.Event.PartialApplication.html#t:id/0","title":"Remedy.Struct.Event.PartialApplication.id/0","type":"type"},{"doc":"Event sent as part of the READY payload.","ref":"Remedy.Struct.Event.PartialApplication.html#t:t/0","title":"Remedy.Struct.Event.PartialApplication.t/0","type":"type"},{"doc":"Struct representing a Remedy-generated Speaking Update event Remedy will generate this event when the bot starts or stops playing audio.","ref":"Remedy.Struct.Event.SpeakingUpdate.html","title":"Remedy.Struct.Event.SpeakingUpdate","type":"module"},{"doc":"Id of the channel this speaking update is occurring in.","ref":"Remedy.Struct.Event.SpeakingUpdate.html#t:channel_id/0","title":"Remedy.Struct.Event.SpeakingUpdate.channel_id/0","type":"type"},{"doc":"Id of the guild this speaking update is occurring in.","ref":"Remedy.Struct.Event.SpeakingUpdate.html#t:guild_id/0","title":"Remedy.Struct.Event.SpeakingUpdate.guild_id/0","type":"type"},{"doc":"Boolean representing if bot has started or stopped speaking.","ref":"Remedy.Struct.Event.SpeakingUpdate.html#t:speaking/0","title":"Remedy.Struct.Event.SpeakingUpdate.speaking/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.SpeakingUpdate.html#t:t/0","title":"Remedy.Struct.Event.SpeakingUpdate.t/0","type":"type"},{"doc":"Boolean representing if speaking update was caused by an audio timeout.","ref":"Remedy.Struct.Event.SpeakingUpdate.html#t:timed_out/0","title":"Remedy.Struct.Event.SpeakingUpdate.timed_out/0","type":"type"},{"doc":"Sent when a user starts typing in a channel","ref":"Remedy.Struct.Event.TypingStart.html","title":"Remedy.Struct.Event.TypingStart","type":"module"},{"doc":"Channel in which the user started typing","ref":"Remedy.Struct.Event.TypingStart.html#t:channel_id/0","title":"Remedy.Struct.Event.TypingStart.channel_id/0","type":"type"},{"doc":"ID of the guild where the user started typing, if applicable","ref":"Remedy.Struct.Event.TypingStart.html#t:guild_id/0","title":"Remedy.Struct.Event.TypingStart.guild_id/0","type":"type"},{"doc":"The member who started typing if this happened in a guild","ref":"Remedy.Struct.Event.TypingStart.html#t:member/0","title":"Remedy.Struct.Event.TypingStart.member/0","type":"type"},{"doc":"Event sent when a user starts typing in a channel","ref":"Remedy.Struct.Event.TypingStart.html#t:t/0","title":"Remedy.Struct.Event.TypingStart.t/0","type":"type"},{"doc":"Unix time (in seconds) of when the user started typing","ref":"Remedy.Struct.Event.TypingStart.html#t:timestamp/0","title":"Remedy.Struct.Event.TypingStart.timestamp/0","type":"type"},{"doc":"ID of the user who started typing","ref":"Remedy.Struct.Event.TypingStart.html#t:user_id/0","title":"Remedy.Struct.Event.TypingStart.user_id/0","type":"type"},{"doc":"Struct representing a Remedy-generated Voice Ready event Remedy will generate this event when the bot joins a voice channel and is ready to play audio. Listening to this event may be used for bots that begin playing audio directly after joining a voice channel as an alternative to waiting until Remedy.Voice.ready?/1 returns true .","ref":"Remedy.Struct.Event.VoiceReady.html","title":"Remedy.Struct.Event.VoiceReady","type":"module"},{"doc":"Id of the channel that voice is ready in.","ref":"Remedy.Struct.Event.VoiceReady.html#t:channel_id/0","title":"Remedy.Struct.Event.VoiceReady.channel_id/0","type":"type"},{"doc":"Id of the guild that voice is ready in.","ref":"Remedy.Struct.Event.VoiceReady.html#t:guild_id/0","title":"Remedy.Struct.Event.VoiceReady.guild_id/0","type":"type"},{"doc":"","ref":"Remedy.Struct.Event.VoiceReady.html#t:t/0","title":"Remedy.Struct.Event.VoiceReady.t/0","type":"type"},{"doc":"Sent when a guild's voice server is updated","ref":"Remedy.Struct.Event.VoiceServerUpdate.html","title":"Remedy.Struct.Event.VoiceServerUpdate","type":"module"},{"doc":"The voice server host","ref":"Remedy.Struct.Event.VoiceServerUpdate.html#t:endpoint/0","title":"Remedy.Struct.Event.VoiceServerUpdate.endpoint/0","type":"type"},{"doc":"Guild this voice server update is for","ref":"Remedy.Struct.Event.VoiceServerUpdate.html#t:guild_id/0","title":"Remedy.Struct.Event.VoiceServerUpdate.guild_id/0","type":"type"},{"doc":"Event sent when a guild's voice server is updated","ref":"Remedy.Struct.Event.VoiceServerUpdate.html#t:t/0","title":"Remedy.Struct.Event.VoiceServerUpdate.t/0","type":"type"},{"doc":"Voice connection token","ref":"Remedy.Struct.Event.VoiceServerUpdate.html#t:token/0","title":"Remedy.Struct.Event.VoiceServerUpdate.token/0","type":"type"},{"doc":"Represents a user's voice connection status","ref":"Remedy.Struct.Event.VoiceState.html","title":"Remedy.Struct.Event.VoiceState","type":"module"},{"doc":"Channel ID this voice state is for","ref":"Remedy.Struct.Event.VoiceState.html#t:channel_id/0","title":"Remedy.Struct.Event.VoiceState.channel_id/0","type":"type"},{"doc":"Whether this user is deafened by the server","ref":"Remedy.Struct.Event.VoiceState.html#t:deaf?/0","title":"Remedy.Struct.Event.VoiceState.deaf?/0","type":"type"},{"doc":"Guild ID this voice state is for, if applicable","ref":"Remedy.Struct.Event.VoiceState.html#t:guild_id/0","title":"Remedy.Struct.Event.VoiceState.guild_id/0","type":"type"},{"doc":"Guild member this voice state is for, if applicable","ref":"Remedy.Struct.Event.VoiceState.html#t:member/0","title":"Remedy.Struct.Event.VoiceState.member/0","type":"type"},{"doc":"Whether this user is muteened by the server","ref":"Remedy.Struct.Event.VoiceState.html#t:mute?/0","title":"Remedy.Struct.Event.VoiceState.mute?/0","type":"type"},{"doc":"Time at which the user requested to speak, if applicable","ref":"Remedy.Struct.Event.VoiceState.html#t:request_to_speak_timestamp/0","title":"Remedy.Struct.Event.VoiceState.request_to_speak_timestamp/0","type":"type"},{"doc":"Whether this user is locally deafened","ref":"Remedy.Struct.Event.VoiceState.html#t:self_deaf?/0","title":"Remedy.Struct.Event.VoiceState.self_deaf?/0","type":"type"},{"doc":"Whether this user is locally muted","ref":"Remedy.Struct.Event.VoiceState.html#t:self_mute?/0","title":"Remedy.Struct.Event.VoiceState.self_mute?/0","type":"type"},{"doc":"Whether the user is streaming using &quot;Go Live&quot;","ref":"Remedy.Struct.Event.VoiceState.html#t:self_stream?/0","title":"Remedy.Struct.Event.VoiceState.self_stream?/0","type":"type"},{"doc":"Whether this user's camera is enabled","ref":"Remedy.Struct.Event.VoiceState.html#t:self_video?/0","title":"Remedy.Struct.Event.VoiceState.self_video?/0","type":"type"},{"doc":"Session ID for this voice state","ref":"Remedy.Struct.Event.VoiceState.html#t:session_id/0","title":"Remedy.Struct.Event.VoiceState.session_id/0","type":"type"},{"doc":"Whether this user is muted by the current user","ref":"Remedy.Struct.Event.VoiceState.html#t:suppress?/0","title":"Remedy.Struct.Event.VoiceState.suppress?/0","type":"type"},{"doc":"Event sent when a user's voice status is updated","ref":"Remedy.Struct.Event.VoiceState.html#t:t/0","title":"Remedy.Struct.Event.VoiceState.t/0","type":"type"},{"doc":"User this voice state is for","ref":"Remedy.Struct.Event.VoiceState.html#t:user_id/0","title":"Remedy.Struct.Event.VoiceState.user_id/0","type":"type"},{"doc":"Time Helpers","ref":"Remedy.TimeHelpers.html","title":"Remedy.TimeHelpers","type":"module"},{"doc":"Returns the number of milliseconds since unix epoch.","ref":"Remedy.TimeHelpers.html#now/0","title":"Remedy.TimeHelpers.now/0","type":"function"},{"doc":"Returns the current date as an ISO formatted string.","ref":"Remedy.TimeHelpers.html#now_iso/0","title":"Remedy.TimeHelpers.now_iso/0","type":"function"},{"doc":"Returns the number of microseconds since unix epoch.","ref":"Remedy.TimeHelpers.html#usec_now/0","title":"Remedy.TimeHelpers.usec_now/0","type":"function"},{"doc":"Returns the number of ms since the Discord epoch.","ref":"Remedy.TimeHelpers.html#utc_now_ms/0","title":"Remedy.TimeHelpers.utc_now_ms/0","type":"function"},{"doc":"Represents a failed response from the API. This occurs when hackney or HTTPoison fail, or when the API doesn't respond with 200 or 204 . This should only occur when using the banged API methods. Check the Format","ref":"Remedy.ApiError.html","title":"Remedy.ApiError","type":"exception"},{"doc":"","ref":"Remedy.ApiError.html#t:detailed_error/0","title":"Remedy.ApiError.detailed_error/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:discord_status_code/0","title":"Remedy.ApiError.discord_status_code/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:error/0","title":"Remedy.ApiError.error/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:error_list_map/0","title":"Remedy.ApiError.error_list_map/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:errors/0","title":"Remedy.ApiError.errors/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:response/0","title":"Remedy.ApiError.response/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:status_code/0","title":"Remedy.ApiError.status_code/0","type":"type"},{"doc":"","ref":"Remedy.ApiError.html#t:t/0","title":"Remedy.ApiError.t/0","type":"type"},{"doc":"Represents an error when interacting with the cache. This likely occurs because a specified item could not be found in the cache, or your were searching for something invalid. This should only occur when using the banged cache methods.","ref":"Remedy.CacheError.html","title":"Remedy.CacheError","type":"exception"},{"doc":"Raised when an environment variable cannot be found","ref":"Remedy.EnvironmentVariableError.html","title":"Remedy.EnvironmentVariableError","type":"exception"},{"doc":"Represents an error when playing sound through voice channels. This occurs when attempting to play audio and Porcelain can't find either the ffmpeg executable or the youtube-dl executable.","ref":"Remedy.VoiceError.html","title":"Remedy.VoiceError","type":"exception"},{"doc":"Remedy Playground fork of Nostrum discord library. I am still using Nostrum for my bots and I recommend you do the same. This is just a playground.","ref":"introduction.html","title":"Remedy","type":"extras"},{"doc":"Gun 2.0 Separate applicable components into their own packages. Organise types - Timestamp / Snowflake Convert structs to schema to... Make the casting easier. Make storing them in a db easier. Prevent the end user re modelling these things for their own db. Convert cache to Etso. integrate nicely with new schema. Generalize cache. Choose what to cache. eg i only want to cache user presence and message embeds... Make it an actual cache, aka invisible and if the resource is not in cache, we should fetch it and return it as required. Testing Supply a bot secret thru workflow to enable actual testing on a real server. without exposing secrets (prob too hard) Bang functions?!? Remove all the bloaty manual stuff. Include a generic unsafe.","ref":"introduction.html#goals","title":"Remedy - Goals","type":"extras"},{"doc":"I have extracted various components from the codebase which in my opinion are cluttering the code with static helpers at various layers of abstraction. You are welcome to use them and submit any improvements you find. Sunbake For easy types. Timestamp and Snowflake currently included. Battle Standard Clean up all those manual flag helpers. just use BattleStandard","ref":"introduction.html#packages","title":"Remedy - Packages","type":"extras"}]